% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dist_weighted_hamming.r
\name{dist_weighted_hamming}
\alias{dist_weighted_hamming}
\title{dist_weighted_hamming}
\usage{
dist_weighted_hamming(x, wVec, dropout, ...)
}
\arguments{
\item{x}{Sequence object of 'phyDat' type.}

\item{wVec}{Weight vector for the calculation of weighted hamming distance}

\item{dropout}{Different weighting strategy is taken to consider interval dropout with dropout = 'TRUE'. Default is, dropout = 'FALSE'.}
}
\value{
Calculated distance matrix of input sequences. The result is a 'dist' class object.
}
\description{
implementation of weighted hamming algorithm
}
\examples{

set.seed(1)
mu_d1 = c( 30, 20, 10, 5, 5, 1, 0.01, 0.001)
mu_d1 = mu_d1/sum(mu_d1)
simn = 100 # number of cell samples
m = 200  ## number of targets
sD = sim_seqdata(sim_n = simn, m = m, mu_d = 0.03, d = 12, n_s = length(mu_d1), outcome_prob = mu_d1, p_d = 0.005 )
## RF score with hamming distance
sD$seqs \%>\% dist.hamming()  \%>\% NJ() \%>\% RF.dist(sD$tree, normalize = TRUE)
## RF score with weighted hamming
InfoW = -log(mu_d1)
InfoW[1:2] = 1
InfoW[3:7] = 4.5
sD$seqs \%>\% `dist_weighted_hamming(InfoW) \%>\% NJ() \%>\% RF.dist(sD$tree, normalize = TRUE)
## RF score with weighted hamming, cosidering dropout situation
nfoW = -log(mu_d1)
InfoW[1] = 1
InfoW[2] = 12
InfoW[3:7] = 3
sD$seqs \%>\% dist_weighted_hamming(InfoW, dropout=TRUE) \%>\% NJ() \%>\% RF.dist(sD$tree, normalize = TRUE)


}
\author{
Il-Youp Kwak
}
